
CC_OUTPUT ?= build.goto

#
# Programs to utilize
#

GOTO_CC = goto-cc
GOTO_INST = goto-instrument
CBMC = cbmc
VIEWER = cbmc-viewer

#
# Build arguments
#

INCLUDE = \
	-I$(ROOT)/os \
	-I$(ROOT)/arch/cpu/native \
	-I$(ROOT)/arch/platform/native \
	# empty

CC_ARGS = \
	--function harness

CBMC_ARGS = \
	--bounds-check \
	--function harness \
	# empty

#
# Define rule to run CBMC
#

bcbmc:
	mkdir build
	goto-cc -o build/$(CC_OUTPUT) $(INCLUDE) $(CC_ARGS) -DNETSTACK_CONF_MAC=MAC_CONF_WITH_NULLMAC $(HARNESS) $(LINK)

pcmbc: bcbmc

cbmc: bcbmc
	-cbmc $(CBMC_ARGS) --unwinding-assertions --trace --xml-ui build/$(CC_OUTPUT) > build/cbmc.xml

property: bcbmc
	cbmc $(CBMC_ARGS) --unwinding-assertions --show-properties --xml-ui build/$(CC_OUTPUT) > build/property.xml

coverage: bcbmc
	cbmc $(CBMC_ARGS) --cover location --xml-ui build/$(CC_OUTPUT) > build/coverage.xml

report: cbmc property coverage
	mkdir report
	$(VIEWER) \
	--goto build/$(ENTRY).goto \
	--reportdir report \
	--result build/cbmc.xml \
	--property build/property.xml \
	--coverage build/coverage.xml

clean:
	rm -r build

veryclean: clean
	rm -r report
